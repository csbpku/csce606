= render :partial => 'banner'

#map

  :javascript
    var apiKey = 'AIzaSyAOoWZdZFz8nFtVjBlWRysnSoSoSguqCII';
    var map;
    var snappedCoordinates = [];
    function initMap() {
        var tamuCenter = {lat: 30.6187199, lng: -96.3364829};
    
        map = new google.maps.Map(document.getElementById('map'), {
            zoom: 15,
            center: tamuCenter,
    	      mapTypeControlOptions: {
                style: google.maps.MapTypeControlStyle.HORIZONTAL_BAR,
                position: google.maps.ControlPosition.TOP_RIGHT
            }
          });
       }
       
    var qd = {};
    location.search.substr(1).split("&").forEach(
            function(item) {var s = item.split("="), k = s[0], v = s[1] && decodeURIComponent(s[1]); (qd[k] = qd[k] || []).push(v)})
    function display() 
    {
        initMap();
        // the new front end function:
        // runGNavigation(qd['path%5B%5D']);
        runSnapToRoad(qd['path%5B%5D']);
    }
    function runGNavigation(path) {
      //initialize startlocation and firstBusStop here
      startLocation= {lat: 30.618414,  lng: -96.332592};
      firstBusStop= {lat:30.6139, lng: -96.3397};
      startToBusIns= {
        origin:  startLocation,
        destination: firstBusStop,
        travelMode: 'WALKING'
      };
      //initialize endLocation and lastBusStop here

      endLocation= {lat: 30.606927, lng: -96.342873};
      lastBusStop= {lat: 30.6112727887197, lng: -96.3234556510124};
      busToEndIns= {
        origin:  lastBusStop,
        destination: endLocation,
        travelMode: 'WALKING'
      };

      var directionsService = new google.maps.DirectionsService;
      var directionStartToBus = new google.maps.DirectionsRenderer({
        map: map,
        polylineOptions : {
          strokeColor:'red',
          strokeOpacity: 0.7,
        }
      });
      var directionBusToEnd = new google.maps.DirectionsRenderer({
        map: map,
        polylineOptions : {
          strokeColor:'green',
          strokeOpacity: 0.7,
        }

      });
      var directionsDisplay = new google.maps.DirectionsRenderer({map: map});
      var stepDisplay = new google.maps.InfoWindow;
      //latlong for each stop 
      var route27 = [
        {lat:30.6139, lng: -96.3397},
        {lat: 30.6111668414573, lng: -96.3236662044326},
        {lat: 30.6091645723083, lng: -96.3209303510744},
        {lat: 30.6118387348556, lng: -96.3184291910189},
        {lat: 30.6161611149407, lng: -96.312077719693},
        {lat: 30.6177892159098, lng: -96.3101076370542},
        {lat: 30.6183712553007, lng: -96.3080342893621},
        {lat: 30.6207114828057, lng: -96.3045219364477},
          //max waypoint reached (8) need business api key for 23
          // {lat: 30.6184262405888, lng: -96.3081737642392},
          // {lat: 30.6178442011979, lng: -96.3102028554799},
          // {lat: 30.6156783172892, lng: -96.3126879222803},
          // {lat: 30.6119071311895, lng: -96.3185109983987},
        {lat: 30.6108181542646, lng: -96.320265163199},
        {lat: 30.6112727887197, lng: -96.3234556510124},
      ]

      //key to drawing the route. Can set stopover to be false and set static marker as bus stop
      var waypts=[]
      for (var i=1; i<route27.length-1; i++){
        waypts.push({
            location: route27[i],
            stopover:true,
          });
      }

        
      directionsService.route(startToBusIns, function(response, status) {
        if (status === 'OK') {
          directionStartToBus.setDirections(response);
          var route = response.routes[0];
            
        } else {
          window.alert('Directions request failed due to ' + status);
        }
      });

      directionsService.route(busToEndIns, function(response, status) {
        if (status === 'OK') {
          directionBusToEnd.setDirections(response);
          var route = response.routes[0];
            
        } else {
          window.alert('Directions request failed due to ' + status);
        }
      });

      directionsService.route({
        origin: route27[0],
        destination: route27[route27.length-1],
        waypoints: waypts,
        optimizeWaypoints: false,
        travelMode: 'DRIVING'
      }, function(response, status) {
        if (status === 'OK') {
          directionsDisplay.setDirections(response);
          var route = response.routes[0];
            
        } else {
          window.alert('Directions request failed due to ' + status);
        }
      });
      
      //marker, need to have ~14 of them for each route
      // var infowindow = new google.maps.InfoWindow({
      //   content: "Trigon"
      // });

      // var marker = new google.maps.Marker({
      //   position: route27[0],
      //   map: map,
      //   title: 'Trigon'
      // });

      // marker.addListener('click', function() {
      //   infowindow.open(map, marker);
      // });
      
      
    }
    function runSnapToRoad(path) {  
      $.get('https://roads.googleapis.com/v1/snapToRoads', {
        interpolate: true,
        key: apiKey,
        path: path.join('|')
      }, function(data) {
        processSnapToRoadResponse(data);
        drawSnappedPolyline();
      });
    }
    
    // Store snapped polyline returned by the snap-to-road service.
    function processSnapToRoadResponse(data) {
      snappedCoordinates = [];
      placeIdArray = [];
      for (var i = 0; i < data.snappedPoints.length; i++) {
        var latlng = new google.maps.LatLng(
            data.snappedPoints[i].location.latitude,
            data.snappedPoints[i].location.longitude);
        snappedCoordinates.push(latlng);
        //placeIdArray.push(data.snappedPoints[i].placeId);
      }
    }
    
    // Draws the snapped polyline (after processing snap-to-road response).
    function drawSnappedPolyline() {
      var snappedPolyline = new google.maps.Polyline({
        path: snappedCoordinates,
        strokeColor: 'red',
        strokeWeight: 3
      });
    
      snappedPolyline.setMap(map);
      //polylines.push(snappedPolyline);
    }
  %script{:async => "", :defer => "defer", :src => "https://maps.googleapis.com/maps/api/js?key=AIzaSyBGXhzWszzxqmajf5w0AzEmFi5hbgA8VRY&callback=display"}
  :cdata
