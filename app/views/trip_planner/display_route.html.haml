= render :partial => 'banner'

#right-panel
#map

  :javascript
    var apiKey = 'AIzaSyAOoWZdZFz8nFtVjBlWRysnSoSoSguqCII';
    var map;
    var snappedCoordinates = [];
    var placeIdArray = [];
    
    function initMap() {
        var tamuCenter = {lat: 30.6187199, lng: -96.3364829};
    
        map = new google.maps.Map(document.getElementById('map'), {
            zoom: 15,
            center: tamuCenter,
    	      mapTypeControlOptions: {
                style: google.maps.MapTypeControlStyle.HORIZONTAL_BAR,
                position: google.maps.ControlPosition.TOP_RIGHT
            }
          });
       }
      
    //var qd = {};
    //location.search.substr(1).split("&").forEach(
            //function(item) {var s = item.split("="), k = s[0], v = s[1] && decodeURIComponent(s[1]); (qd[k] = qd[k] || []).push(v)})
    function display() 
    {
        initMap();
        $.ajax({url: 'display_route',
               dataType: 'json',
               timeout: 5000,
               success: function(data) { draw_route(data); }
               });
        // the new front end function:
        // runGNavigation(qd['path%5B%5D']);
        // runSnapToRoad(qd['path%5B%5D']);

    }
    
    function draw_route(data) 
    {
      var i;
      for(i = 0; i < data.length; i++) 
      { 
        path = data[i];
        switch(path.transportation_type) {
          case "walk":
            runGNavigation(path.nav_points);
            break;
          case "bus":
            runSnapToRoad(path.nav_points.map(toString), path.bus_route_name);
            displayBusInformation(path.nav_points, path.bus_route_name);
        }
      }
    }
    
    function toString(latlon) 
    { 
      result = "" + latlon.lat + ", " + latlon.lng;
      return result;
    }
    
    function runGNavigation(data)
    {
      start = data[0];
      end = data[1];
      
      startToEnd = {
        origin:  start,
        destination: end,
        travelMode: 'WALKING'
      };
      
      var directionsService = new google.maps.DirectionsService;
      var directionStartToEnd = new google.maps.DirectionsRenderer({
        map: map,
        polylineOptions : {
          strokeColor:'green',
          strokeOpacity: 0.7,
        },
        //suppressMarkers: true
      });
      
      directionsService.route(startToEnd, function(response, status) {
        if (status === 'OK') {
          directionStartToEnd.setDirections(response);
          var route = response.routes[0];
          var walk_latlng=[];
          var instructionArr=[];
          
            for (var i =0; i < response.routes[0].legs[0].steps.length; i++){
                //instructionArr.push(response.routes[0].legs[0].steps[i].instructions);
                walk_latlng.push(
                {
                  lat: response.routes[0].legs[0].steps[i].start_point.lat(),
                  lng: response.routes[0].legs[0].steps[i].start_point.lng()
                }
                )
            }
            
            instructionArr.push('Walking takes ' + response.routes[0].legs[0].duration.text);
            add_markers(walk_latlng, "Walking", instructionArr, false);
          
        } else {
          window.alert('Directions request failed due to ' + status);
        }
      });
    }

    function runSnapToRoad(path, route_name) {  
      $.get('https://roads.googleapis.com/v1/snapToRoads', {
        interpolate: true,
        key: apiKey,
        path: path.join('|')
      }, function(data) {
        processSnapToRoadResponse(data);
        drawSnappedFullPolyline(route_name);
      });
    }
    
    function displayBusInformation(points, route_name){
      var instructionArr=[];
      var time = 1;
      instructionArr.push("Taking bus #"+ route_name + " might take " + time*points.length+ " mins");
      add_markers(points, route_name, instructionArr, false) 
      add_markers(points.slice(0, Math.floor(points.length/2)), route_name, instructionArr, true)

    }
    
    // Store snapped polyline returned by the snap-to-road service.
    function processSnapToRoadResponse(data) {
      snappedCoordinates = [];
      placeIdArray = [];
      for (var i = 0; i < data.snappedPoints.length; i++) {
        var latlng = new google.maps.LatLng(
            data.snappedPoints[i].location.latitude,
            data.snappedPoints[i].location.longitude);
        snappedCoordinates.push(latlng);
        placeIdArray.push(data.snappedPoints[i].placeId);
      }
    }
    
    function getColorForRoute(route_name) {
      route_name = route_name.replace(/\D/g,'')
      var myColors = ['#d59563', '#d59563', '#263c3f','#6b9a76', '#38414e' ,'#212a37','#9ca5b3', '#746855', '#1f2835', '#f3d19c', '#2f3948', '#d59563', '#17263c','#515c6d', '#17263c', 'purple', 'red', 'orange','yellow'];
      var ind =  Math.floor(Number(route_name)%myColors.length);
      return myColors[ind];
    }
    
    function drawSnappedFullPolyline(route_name){
      //console.log(placeIdArray.length/100)
      //for (var i = 0; i <= Math.floor(placeIdArray.length / 100); i++){
      //  var start = i * 100;
     //   var end = Math.min((i+1)*100, placeIdArray.length);
     //   console.log(start)
      //  console.log(end)
        drawSnappedPolyline(route_name); //, start, end);
      //}
    }

    
    // Draws the snapped polyline (after processing snap-to-road response).
    function drawSnappedPolyline(route_name, mystart, myend) {
      var color = getColorForRoute(route_name);
      var coords = snappedCoordinates;
      
      var snappedPolyline = new google.maps.Polyline({
        path: coords,
        strokeColor: color,
        strokeWeight: 3
      });
    
      snappedPolyline.setMap(map);
      //polylines.push(snappedPolyline);
    }
    
    function add_markers(points, route_name, instructions, flag) {  
      var text = [];
      if(flag){
        text = "Bus route:" + route_name;
      }
      else{
        text = instructions[0];
      }

      var infowindow = new google.maps.InfoWindow({
        content: text
      });
         
      var ind = Math.floor(points.length/2);
      var marker = new google.maps.Marker({
        position: points[ind],
        map: map,
        title: route_name
      });
        
      marker.addListener('click', function() {
        infowindow.open(map, marker);
      });
    }
  %script{:async => "", :defer => "defer", :src => "https://maps.googleapis.com/maps/api/js?key=AIzaSyBGXhzWszzxqmajf5w0AzEmFi5hbgA8VRY&callback=display"}
  :cdata
